---
deployment:
  tasks:
    - /bin/bash <<'DEPLOY'
      set -euo pipefail
      log(){ printf '[deploy] %s\n' "$*"; }
      log "Starting deploy: $(date -Is)"
      SRC="${DEPLOYMENT_SOURCE}"
      DST="${DEPLOYMENT_TARGET}"
      mkdir -p "$DST"

      # ---- Migrate away from any previous symlinked storage (media/video/uploads) ----
      migrate_symlink () {
        local path="$1"
        if [ -L "$path" ]; then
          local target
          target="$(readlink -f "$path" || true)"
          if [ -n "$target" ] && [ -d "$target" ]; then
            log "Migrating symlink: $path -> $target"
            rm -rf "${path}.new" || true
            mkdir -p "${path}.new"
            rsync -a --info=stats2,progress2 "$target/" "${path}.new/"
            rm -f "$path"
            mv "${path}.new" "$path"
          else
            log "Removing broken symlink: $path"
            rm -f "$path"
            mkdir -p "$path"
          fi>
        fi
      }
      migrate_symlink "$DST/media"
      migrate_symlink "$DST/video"
      migrate_symlink "$DST/uploads"

      # Make sure these directories exist (regular directories, not symlinks)
      mkdir -p "$DST/media" "$DST/video" "$DST/uploads"

      # ---- Sync application code from repo/public to docroot, preserving uploads ----
      log "Rsync code from $SRC/public -> $DST"
      timeout 900 rsync -a --delete-after \
        --exclude='media/***' --exclude='video/***' --exclude='uploads/***' \
        --exclude='.well-known/***' \
        --human-readable --info=stats2,progress2 \
        "$SRC/public/" "$DST/"

      # ---- Permissions (skip large upload dirs) ----
      log "Fixing permissions"
      find "$DST" -type f -name '*.php' ! -path "$DST/media/*" ! -path "$DST/video/*" ! -path "$DST/uploads/*" -print0 | xargs -0 -r chmod 0644
      find "$DST" -type d ! -path "$DST/media*" ! -path "$DST/video*" ! -path "$DST/uploads*" -print0 | xargs -0 -r chmod 0755

      # ---- Deploy marker ----
      COMMIT="$(git -C "$SRC" rev-parse HEAD 2>/dev/null || echo unknown)"
      date -Is | awk -v c="$COMMIT" '{print $0" commit="c}' > "$DST/.deploy_info"
      log "Finished deploy: $(cat "$DST/.deploy_info")"
      exit 0
      DEPLOY
